package generated.fr.ul.miage.ahvr.projetCompilationComplet;
import fr.ul.miage.arbre.*;

// code java

terminal IDF,
SI, SINON, ECRIRE, TANTQUE, RETOUR, INT, FONCTION, LIRE,
NUM,
ADD, SUB, MUL, DIV, PO, PF, SUP, INF, SEQ, IEQ, EQ, DIF, AO, AF, PV, VIR, AFF;
//+   -    *    /    (   )   >    <    >=   <=   ==  !=   {   }   ;   ,    =

non terminal expression, facteur, atome,
expressionBooleene,
blocInstruction, blocDeclaration,
conditionnelle,
affectation,
ecrire,
tantque,
retour,
appel,
parametre, parametre2,
instruction,
fonction,
lire,
programme, programme2,
defParam, defParam2, defIdf, declaration;
start with programme;

expression ::= expression ADD facteur
    | expression SUB facteur
    | facteur
    ;
facteur ::= facteur MUL atome
    | facteur DIV atome
    | atome
    ;
atome ::= NUM
    | PO expression PF
    | IDF
    | lire
    | appel
    ;

expressionBooleene ::= expression SUP expression
    | expression INF expression
    | expression SEQ expression
    | expression IEQ expression
    | expression EQ expression
    | expression DIF expression
    ;

blocInstruction ::= instruction blocInstruction
    | //vide
    ;

blocDeclaration ::= declaration blocDeclaration
    | //vide
    ;

conditionnelle ::= SI PO expressionBooleene PF AO blocInstruction AF
                    SINON AO blocInstruction AF
    ;

affectation ::= IDF AFF expression PV
    ;

ecrire ::= ECRIRE PO expression PF PV
    ;

tantque ::= TANTQUE PO expressionBooleene PF AO blocInstruction AF
    ;

retour ::= RETOUR expression PV
    | RETOUR PV
    ;

appel ::= IDF PO parametre PF PV
    ;

parametre ::= parametre2
    | //vide
    ;
parametre2 ::= expression
    | expression VIR parametre2
    ;

instruction ::= affectation
    | appel
    | ecrire
    | conditionnelle
    | tantque
    | retour
    ;

fonction ::= FONCTION IDF PO defParam PF AO blocDeclaration blocInstruction AF
    ;

lire ::= LIRE
    ;

programme ::= blocDeclaration programme2
    ;
programme2 ::= fonction programme2
    | fonction
    ;

defParam ::= defParam2
    | //vide
    ;
defParam2 ::= defIdf VIR defParam2
    | defIdf
    ;
defIdf ::= INT IDF
    ;
declaration ::= defIdf PV
    | defIdf AFF NUM PV
    ;